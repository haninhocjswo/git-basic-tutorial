-------------------------------------------프로젝트를 새로 만들 때------------------------------------------------

1. github 회원가입

2. github repository 생성

3. git 다운로드 및 설치

4. git bash 실행

5. git config --global user.name "내이름" 입력

6. git config --global user.email "내이메일" 입력 <-- 내 이메일은 깃허브 가입 시 입력한 이메일 입력

7. 내가 설정한 정보가 잘 들어갔나 확인 
- git config --list 입력
- 나온 정보에서 user.name과 user.email 잘 들어갔나 확인

8. git hub repository에 처음으로 프로젝트 올릴 때
git bash에서 내가 git hub와 연결할 프로젝트 폴더로 이동
git init 입력

9. git 추가
git add . => .은 전부 다라는 뜻 즉, 현재위치에 있는 모든 파일을 추가하겠다.

만약 내가 원하는 파일만 올리고 싶다면
git add 파일명
ex) 
현재위치에 index.html과 login.html 두 개의 파일이 있을 때 login.html만 올리고 싶다.
git add login.html

10. 내가 현재 올린 파일들을 보고 싶다.
git status 

11. 히스토리 만들기 커밋 시 메시지
git commit -m "히스토리메시지"
ex) git commit -m "project first commit"
12. 로컬프로젝트랑 git hub repository와 연결하기

git remote add origin https://github.com/haninhocjswo/(repository명)
ex) git remote add origin https://github.com/haninhocjswo/git-basic-tutorial.git

* git hub repository 생성 후 나오는 화면에 내 repository와 연결하는 명령어 있음

13. 로컬프로젝트와 git hub repository 연결되었는지 확인
git remote -v

14. git hub로 push하기
git push origin master


---------------------------------------------------협업하는 팀원(처음 프로젝트를 받을 때)---------------------------------------------

1. 포맷된 컴퓨터나 해당자료가 삭제 되었거나 처음 프로젝트에 들어왔을 때 git hub주소를 받아야한다.

2. git bash 접속

3.내가 프로젝트를 저장할 위치로 이동

4. 프로젝트를 다운받는다.

git clone 깃허브 repository 주소
ex) git clone https://github.com/haninhocjswo/git-basic-tutorial.git

*해당 repository 들어간 후 code라고 적힌 버튼을 누르고 복사하면 주소가 복사된다.

---------------------------------------------------협업하는 팀원(변경된 프로젝트를 받을 때)---------------------------------------------

1. git bash 접속

2. 내가 프로젝트를 받을 위치로 이동

3. 프로젝트를 pull한다.

git pull origin master


---------------------------------------------------협업하는 팀원(프로젝트 깃허브로 업로드할 때)---------------------------------------------

1. git bash 실행

2. 업로드할 파일들이 있는 프로젝트로 위치 이동

3. 업로드 추가

git add . (위쪽에 설명)

5. 커밋

git commit -m "메세지"

6. 푸쉬

git push origin master 를 입력하면 안된다.
master는 웹사이트의 최종 프로젝트 파일이다. 코딩은 했으나 검증이 안된 소스를 바로 master로 올리면 안된다.
(개인 프로젝트는 상관 없을 듯...)

그렇다면 나는 어디로 푸쉬를 해야하는가?
팀리더가 나를 위한 공간을 만들어줘야한다. 
내 애칭이 hanino라고 했을 때 팀리더는
git checkout -b hanino 입력

그 후 팀리더가 아닌 사람은
git push origin haninho 로 푸쉬

